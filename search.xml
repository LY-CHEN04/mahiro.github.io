<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>完美世界电竞上海Major 2024</title>
    <url>/2024/08/22/CS2/</url>
    <content><![CDATA[]]></content>
      <tags>
        <tag>CS</tag>
      </tags>
  </entry>
  <entry>
    <title>CS2控制台指令简明索引</title>
    <url>/2023/11/09/CSGO%E6%8E%A7%E5%88%B6%E5%8F%B0%E6%8C%87%E4%BB%A4%E7%AE%80%E6%98%8E%E7%B4%A2%E5%BC%95/</url>
    <content><![CDATA[<h5 id="注：随Valve推送游戏进度本文部分内容或将不适用更新版本。"><a href="#注：随Valve推送游戏进度本文部分内容或将不适用更新版本。" class="headerlink" title="注：随Valve推送游戏进度本文部分内容或将不适用更新版本。"></a>注：随Valve推送游戏进度本文部分内容或将不适用更新版本。</h5><span id="more"></span>

<p>V社(Valve)的Source起源引擎制作的游戏都可以开发者控制台，简称控制台<code>console</code>，使用控制台可以实现很多游戏的设置面板无法提供的功能，比如跳投、切换准星参数、颜色等等特殊功能都是利用了控制台的指令实现的，这也是CS游戏的一大特色了。</p>
<h2 id="开启控制台"><a href="#开启控制台" class="headerlink" title="开启控制台"></a>开启控制台</h2><p>在游戏的设置菜单里，<code>游戏设置-游戏-启用开发者控制台</code>选<strong>是</strong>即可启用控制台，之后按下<code>~</code>即可开关控制台并使用各种指令。开启控制台的指令是<code>con_enable 1</code>，看起来是个悖论，等到说CFG时就知道它的用处了。</p>
<h2 id="多个控制台指令"><a href="#多个控制台指令" class="headerlink" title="多个控制台指令"></a>多个控制台指令</h2><p>当同时需要在控制台使用多个指令时，务必使用分号<code>;</code>分隔各个指令。</p>
<h2 id="控制台提示"><a href="#控制台提示" class="headerlink" title="控制台提示"></a>控制台提示</h2><p>指令输入的过程中控制台会给出提示，大多数情况都会有下拉菜单提示各种指令，可以使用↑↓在下拉菜单中切换，使用Tab键也可以自动填入下拉菜单的第一个指令，比如：</p>
<ul>
<li>显示各种网络参数的指令<code>net_graph 1</code>，输入至<code>net_</code>时下方第一条指令就是<code>net_graph</code>，直接按下<code>Tab</code>和<code>1</code>即可快速输入这条完整的指令。</li>
<li>退出游戏的指令<code>quit</code>，原理同上，输入<code>q</code>→<code>Tab</code>→<code>回车</code>，即可实现光速quit（真实）。</li>
</ul>
<p>不要小看提示，他可以很大程度上纠正拼写问题，有时使用指令&#x2F;CFG的时候可以试着手动输一遍，过程中提示消失很可能是拼写有误；同样，如果使用HLAE录制集锦，输入<code>mirv</code>发现没有提示极可能没有正确地使用HLAE启动CSGO。</p>
<h2 id="常用控制台指令"><a href="#常用控制台指令" class="headerlink" title="常用控制台指令"></a>常用控制台指令</h2><h3 id="账号登录相关"><a href="#账号登录相关" class="headerlink" title="账号登录相关"></a>账号登录相关</h3><ul>
<li>quit 快速退出游戏，使用心态爆炸，光速quit</li>
<li>exit 同上，不过没有那么有名</li>
<li>disconnect 退出服务器到主界面</li>
<li>retry 重连最近一次加入的房间，比如从休闲、死斗退出之后还想回到刚才的房间可以使用，前提是中途没有重开游戏；5e、b5等平台也可以使用快速重连服务器（小退），重启游戏是大退。</li>
</ul>
<h3 id="常用指令"><a href="#常用指令" class="headerlink" title="常用指令"></a>常用指令</h3><ul>
<li>net_graph 1 显示网络参数：ping&#x2F;var&#x2F;choke等，0为关闭。</li>
<li>net_graphpos 1 网络参数的水平位置：1&#x3D;右 2&#x3D;中 3&#x3D;左。</li>
<li>fps_max 300 设置最大帧数为300，一般会根据当前的帧数表现动态调整，尽可能让FPS波动不超过60以获得较好的观感体验。</li>
<li>volume 1 主音量大小，0为静音</li>
<li>sensitivity 0.9 鼠标灵敏度</li>
<li>map dust2 进入本地离线服务器并加载dust2地图，地图名不必完全一致，如荒漠迷城可以用<code>map mir</code>。</li>
<li>mat_monitorgamma 2.2 亮度，越小越亮[1.6~2.6]</li>
<li>mat_monitorgamma_tv_enabled “0” 显示模式[1.电视 0.电脑屏幕]</li>
<li>buy awp 购买武器指令，即购买awp</li>
<li>give weapon_ak47 获得ak47，常用于跑图</li>
<li>+right 视角右移，输入-right取消</li>
<li>+moveright 相当于按下D键，-moveright取消，和+right组成挂机防踢指令</li>
</ul>
<h3 id="cl-相关参数"><a href="#cl-相关参数" class="headerlink" title="cl_相关参数"></a>cl_相关参数</h3><p>cl_开头的指令往往和HUD有关，比如雷达、血条、菜单等用于提示玩家的信息。</p>
<ul>
<li>cl_autowepswitch 0 关闭自动换上捡起的武器：珍爱生命，远离自动换枪</li>
<li>cl_autohelp 0 禁用游戏提示（格洛克&#x2F;法玛斯连发提示）</li>
<li>cl_showhelp 0 禁用游戏提示</li>
<li>cl_dm_buyrandomweapons 0 关闭死斗随机买枪，功能同F3键</li>
<li>cl_draw_hud 0 关闭HUD，得到相对干净的画面，方便截图或者录制视频</li>
<li>cl_draw_only_deathnotices 0 关闭大部分HUD，保留准星和击杀信息，常用于录制视频和集锦</li>
<li>cl_drawhud_force_radar -1 强制关闭雷达，但是雷达下方的金钱数无法关闭，1开启雷达</li>
</ul>
<p>HUD颜色透明度、雷达参数省略，直接在设置中调整即可。</p>
<h3 id="准星参数"><a href="#准星参数" class="headerlink" title="准星参数"></a>准星参数</h3><ul>
<li>cl_crosshairalpha 255 透明度（0~255）</li>
<li>cl_crosshairdot 1 准星中间的点，0关闭</li>
<li>cl_crosshairgap 1 十字准星间距，可以&lt;0</li>
<li>cl_crosshair_t 0 T型准星，1开启</li>
<li>cl_crosshairsize 3 准星长度</li>
<li>cl_crosshairthickness 1 准星厚度</li>
<li>cl_crosshairstyle 4 准星类型[1. 2. 3. 4.经典静态 5.跑动静止开枪动态]</li>
<li>cl_crosshair_drawoutline 0 准星黑色外轮廓粗细，0关闭</li>
<li>cl_crosshaircolor_b “250”</li>
<li>cl_crosshaircolor_r “0”</li>
<li>cl_crosshaircolor_g “255” 准星的颜色RGB值</li>
</ul>
<p>主要是这些参数，小改动使用控制台方便，更全面的调整请在创意工坊<strong>Crashz crosshair generator</strong>中调整。</p>
<h3 id="持枪视角参数"><a href="#持枪视角参数" class="headerlink" title="持枪视角参数"></a>持枪视角参数</h3><ul>
<li>viewmodel_presetpos 2 持枪视角预设[1.默认 2.写实 3.经典]</li>
<li>viewmodel_recoil 0 取消开枪枪口向上跳动，1开启时跳动幅度很大</li>
<li>viewmodel_offset_x “1.1”</li>
<li>viewmodel_offset_y “-1.8”</li>
<li>viewmodel_offset_z “0.2” XYZ轴的参数</li>
<li>viewmodel_fov “54” 视角的FOV（视野大小）</li>
<li>cl_bobcycle “0.98” 手臂摆动幅度</li>
</ul>
<p>主要浏览一下这些参数，可以在创意工坊<strong>Crashz viewmodel generator</strong>中调整。</p>
<h3 id="sv-相关参数"><a href="#sv-相关参数" class="headerlink" title="sv_相关参数"></a>sv_相关参数</h3><p>sv是server的简写，一般在主机创建房间的时候使用，跑图常用。</p>
<ul>
<li>sv_cheats 1 开启作弊模式，有的指令官匹会影响平衡，跑图时记得开启</li>
<li>sv_infinite_ammo 1 无限子弹 [1.无限子弹 2.无限弹夹数 0.关闭]</li>
<li>sv_showimpacts 1 显示弹着点，0关闭</li>
<li>sv_showimpacts_time 15 弹着点时间，单位秒</li>
<li>sv_grenade_trajectory 1 显示投掷物轨迹，0关闭</li>
<li>sv_grenade_trajectory_time 15 投掷物轨迹显示时间</li>
<li>sv_grenade_trajectory_thickness 0.5 轨迹线厚度</li>
</ul>
<h3 id="bot相关指令"><a href="#bot相关指令" class="headerlink" title="bot相关指令"></a>bot相关指令</h3><ul>
<li>bot_kick 踢掉BOT</li>
<li>bot_stop 1 BOT静止</li>
<li>bot_crouch 1 BOT蹲下</li>
<li>bot_add 添加BOT</li>
<li>bot_kill 杀死BOT</li>
<li>bot_place 放置BOT</li>
</ul>
<h3 id="mp-相关指令"><a href="#mp-相关指令" class="headerlink" title="mp_相关指令"></a>mp_相关指令</h3><ul>
<li>mp_warmup_end 热身结束</li>
<li>mp_restartgame 1 重新开始游戏</li>
<li>mp_freezetime 1 回合开始静止1s</li>
<li>mp_round_restart_delay 2 回合结束后等待时间2s</li>
<li>god 无敌，gods是所有人无敌</li>
</ul>
<h3 id="bind指令"><a href="#bind指令" class="headerlink" title="bind指令"></a>bind指令</h3><div class="highlight-container" data-rel="Text"><figure class="iseeu highlight text"><table><tr><td class="code"><pre><span class="line">bind x &quot;...&quot;;</span><br></pre></td></tr></table></figure></div>

<p>该指令的格式如上，x为绑定的按键名，<code>...</code>是绑定的指令，可以是一条也可以是多条指令用分号<code>;</code>分开，填入引号<code>&quot; &quot;</code>，当指令是没有间隔的单独指令时引号<code>;可以省略，其他情况不可省，如</code>+speed<code>可省略，</code>sensitivity 1&#96;和多个指令不省略。多个指令例子如下：</p>
<div class="highlight-container" data-rel="Text"><figure class="iseeu highlight text"><table><tr><td class="code"><pre><span class="line">bind shift &quot;+speed;r_cleardecals&quot;;</span><br></pre></td></tr></table></figure></div>


<p><code>+speed</code>是静步的指令，<code>r_cleardecals</code>是清楚血迹的指令，绑定了shift键。这条指令执行之后，在按下shift键静步的同时清除血迹。</p>
<p>bind指令还有一种用法，用来查看某个按键已经绑定的指令：</p>
<div class="highlight-container" data-rel="Text"><figure class="iseeu highlight text"><table><tr><td class="code"><pre><span class="line">bind x</span><br></pre></td></tr></table></figure></div>

<p>输入之后控制台会显示已经绑定的指令，可以检查有没有正确地绑定按键。</p>
<h3 id="unbind指令"><a href="#unbind指令" class="headerlink" title="unbind指令"></a>unbind指令</h3><p>清除已绑定的键位，比如已经绑定了x键，想要取消：</p>
<div class="highlight-container" data-rel="Text"><figure class="iseeu highlight text"><table><tr><td class="code"><pre><span class="line">unbind x</span><br></pre></td></tr></table></figure></div>

<div class="highlight-container" data-rel="Text"><figure class="iseeu highlight text"><table><tr><td class="code"><pre><span class="line">unbindall	//取消所有按键绑定</span><br></pre></td></tr></table></figure></div>

<div class="highlight-container" data-rel="Text"><figure class="iseeu highlight text"><table><tr><td class="code"><pre><span class="line">unbindallmousekeyboard//取消所有键鼠的绑定</span><br></pre></td></tr></table></figure></div>


<h3 id="bindtoggle和toggle指令"><a href="#bindtoggle和toggle指令" class="headerlink" title="bindtoggle和toggle指令"></a>bindtoggle和toggle指令</h3><p>有的指令比如<code>cl_drawhud 1</code>即打开HUD，修改数字得到<code>cl_drawhud 0</code>，即关闭HUD。实际这种指令往往在两个不同的值之间切换，那么使用bindtoggle和toggle就可以写出非常简单的一键切换的指令：</p>
<div class="highlight-container" data-rel="Text"><figure class="iseeu highlight text"><table><tr><td class="code"><pre><span class="line">bindtoggle x cl_drawhud;</span><br></pre></td></tr></table></figure></div>

<div class="highlight-container" data-rel="Text"><figure class="iseeu highlight text"><table><tr><td class="code"><pre><span class="line">bind x &quot;toggle cl_drawhud&quot;;</span><br></pre></td></tr></table></figure></div>

<p>这两种写法都可以实现x键切换HUD开关。</p>
<p>但是后者<code>toggle</code>的应用更广，可以触发切换更多的指令，比如：</p>
<div class="highlight-container" data-rel="Text"><figure class="iseeu highlight text"><table><tr><td class="code"><pre><span class="line">bind x &quot;toggle volume&quot;;</span><br></pre></td></tr></table></figure></div>

<p>可以写成：</p>
<div class="highlight-container" data-rel="Text"><figure class="iseeu highlight text"><table><tr><td class="code"><pre><span class="line">bind x &quot;toggle volume 0 1&quot;;</span><br></pre></td></tr></table></figure></div>


<p>但是实际上音量不仅有0、1两种情况，可以是0&#x2F;1之间的小数，同样有的指令的值可以大于1，这时候用第二种写法就可以任意地切换。</p>
<div class="highlight-container" data-rel="Text"><figure class="iseeu highlight text"><table><tr><td class="code"><pre><span class="line">bind x &quot;toggle volume 1 0.5&quot;;	//一键切换音量100%/50%</span><br></pre></td></tr></table></figure></div>


<h3 id="alias指令"><a href="#alias指令" class="headerlink" title="alias指令"></a>alias指令</h3><p>bind指令可以给某个键绑定指令，而alias指令则可以自定义指令。有了alias之后，可以实现CSGO中很多特殊的功能，可以了解一下<a class="link"   href="https://purple-csgo.github.io/hlae/hlae-focus.html" >一键高亮击杀 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>的指令解释。</p>
<div class="highlight-container" data-rel="Text"><figure class="iseeu highlight text"><table><tr><td class="code"><pre><span class="line">alias func &quot;...;...&quot;;</span><br></pre></td></tr></table></figure></div>

<p>执行这条指令之后，在<strong>关闭CSGO游戏之前</strong>，使用<code>func</code>指令就相当于执行””中所有的指令，可以直接在控制台中使用：</p>
<div class="highlight-container" data-rel="Text"><figure class="iseeu highlight text"><table><tr><td class="code"><pre><span class="line">func</span><br></pre></td></tr></table></figure></div>


<p>也可以绑定到某个按键上，按键触发：</p>
<div class="highlight-container" data-rel="Text"><figure class="iseeu highlight text"><table><tr><td class="code"><pre><span class="line">bind x func;</span><br></pre></td></tr></table></figure></div>


<p>一定注意alias指令是临时生效的，重启游戏就要重新输入，解决办法是写成CFG并启用自动加载。</p>
<hr>
<p>alias指令强大之处在于，它可以嵌套定义：</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">text</span><br><span class="line">alias f f_on;</span><br><span class="line">alias f_on &quot;alias f f_off;...&quot;;</span><br><span class="line">alias f_off &quot;alias f f_on;...&quot;;</span><br><span class="line">bind x f;</span><br></pre></td></tr></table></figure></div>


<p>这样就实现一个开关式的功能：</p>
<ul>
<li>一开始，按键<strong>x</strong>代表执行<code>f</code>，即<code>f_on</code>。</li>
<li>按下按键<strong>x</strong>，实际执行<code>f_on</code>，由于也执行了<code>alias f f_of;</code>，之后执行<code>f</code>相当于执行<code>f_off</code></li>
<li>再按下按键<strong>x</strong>，实际执行<code>f_off</code>，由于也执行了<code>alias f f_on;</code>，之后执行<code>f</code>相当于执行<code>f_on</code></li>
<li>往复在两个档位间切换</li>
</ul>
<p><code>...</code>处可以放入各种指令，已经可以实现很多的功能了，下面给出跳投的指令：</p>
<div class="highlight-container" data-rel="Text"><figure class="iseeu highlight text"><table><tr><td class="code"><pre><span class="line">bind Capslock +jumpthrow;	// &quot;Capslock&quot;键跳投 可修改</span><br><span class="line">alias +jumpthrow &quot;+jump;-attack&quot;;</span><br><span class="line">alias -jumpthrow -jump;</span><br></pre></td></tr></table></figure></div>

<p>如果理解了刚才说的内容，这段指令应该可以理解，这里补充的是：<code>+指令</code>、<code>-指令</code>代表按下&#x2F;松开按键时触发，按下Capslock键执行<code>+jump;-attack</code>，也就是跳投，松开Capslock键执行<code>-jump</code>，防止不停地跳。</p>
<h2 id="链接"><a href="#链接" class="headerlink" title="链接"></a>链接</h2><p><a class="link"   href="https://tools.dathost.net/csgo-commands" >CSGO指令搜索 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<p><a class="link"   href="https://developer.valvesoftware.com/wiki/Console_Command_List" >Valve官方指令清单 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<p><a class="link"   href="https://github.com/Purple-CSGO/Cfg-Preset-By-Purp1e/blob/master/bind_default.cfg" >默认键位指令 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
]]></content>
      <tags>
        <tag>CS</tag>
      </tags>
  </entry>
  <entry>
    <title>Intel QSV在FFmpeg中的实现与使用</title>
    <url>/2024/06/16/Intel%20QSV%E5%9C%A8FFmpeg%E4%B8%AD%E7%9A%84%E5%AE%9E%E7%8E%B0%E4%B8%8E%E4%BD%BF%E7%94%A8/</url>
    <content><![CDATA[<h5 id="文章摘自CSDN社区。本文经修改。"><a href="#文章摘自CSDN社区。本文经修改。" class="headerlink" title="文章摘自CSDN社区。本文经修改。"></a>文章摘自CSDN社区。本文经修改。</h5><span id="more"></span>

<h2 id="一、处理器整体架构"><a href="#一、处理器整体架构" class="headerlink" title="一、处理器整体架构"></a>一、处理器整体架构</h2><p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/images/QSV1.jpg"
                     
                ><br>英特尔的图形处理GPU被称为“核芯显卡”，与CPU集成封装在同一个芯片上，上图展示的是芯片的内部结构。</p>
<h3 id="1-1-发展"><a href="#1-1-发展" class="headerlink" title="1.1 发展"></a>1.1 发展</h3><p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/images/QSV2.jpg"
                     
                ><br>英特尔从lvy Bridge架构开始就尝试将GPU与CPU集成在中央处理芯片中并逐代发展到Skylake架构。初期的Ivy Bridge架构中GPU所占的面积非常小，而到现在的第五代处理器架构Skylake已经实现十分成熟的GPU集成技术，GPU在芯片中所占的面积已经超过了一半。在未来将推出基于PCI-E的独立显卡，为PC带来更大的图像性能提升。</p>
<h3 id="1-2-基础功能模块"><a href="#1-2-基础功能模块" class="headerlink" title="1.2 基础功能模块"></a>1.2 基础功能模块</h3><p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/images/QSV3.jpg"
                     
                ><br>上图展示的是一款GPU所具备的一些基础功能模块。英特尔的核芯显卡分为普通的Intel HD Graphics与性能强大的Intel Iris (Pro)Graphics，其中硬件结构的变化决定性能的高低。GPU中的Slice个数越多，处理单元的组织方式越多，性能便越强大。</p>
<p>Intel HD Graphics也就是GT2中只有一个Slice，而对于Iris系列中的GT3则有两个Slice；GT3e相对于GT3增加了eDRAM使其具有更快的内存访问速度，而GT4e则增加到三个Slice。</p>
<p>GPU的基础功能模块主要由EU以及相关的Media Processing（MFX）等组成。一个Slice中有三个Sub-Slice，Sub-Slice中包含具体的EU和Media Sampler模块作为最基本的可编程处理单元，GPU相关的任务都是在EU上进行。而Media Processing中还集成了一个被称为MFX的独立模块，主要由Media Format Codec（MFX）与VQE组成。</p>
<p>MFX可将一些处理任务通过Fix Function打包，固定于一个执行单元中进行统一的编解码处理，不调用EU从而实现提高EU处理3D图形等任务的速度。Video Quality Engine（VQE）提供De-interlace与De-Noise等视频处理任务，在编解码中使用EU是为了得到更高的视频编码质量。</p>
<h3 id="1-3-结构演进"><a href="#1-3-结构演进" class="headerlink" title="1.3 结构演进"></a>1.3 结构演进</h3><p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/images/QSV4.jpg"
                     
                ><br>上图展示的是英特尔几代核芯显卡产品在结构上的变化。</p>
<p>最早的Haswell架构也就是v3系列中的EU个数相对较少，最多为40个；而到Broadwell架构的GT3中集成了2个Slice，EU个数随之增加到48个，图像处理性能也随之增强。</p>
<p>从Broadwell架构发展到Skylake架构，除了EU与Slice格式增加的变化，MFX的组织也有相应改进。Broadwell架构是将MFX集成于一个Slice中，一个Slice集成一个MFX；而到Skylake架构之后Slice的个数增加了但MFX的个数并没有，此时的MFC便集成在Slice之外。</p>
<p>随着组织方式的改变，核芯显卡的功能也随之改变：Skylake增加了HEVC的Decoder、PAK增加了基于HEVC的处理功能等改进为核芯显卡整体处理性能带来了显著提升，第六代以后的核芯显卡也都主要沿用GT3的架构组织。<br><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/images/QSV5.jpg"
                     
                ></p>
<blockquote>
<p>从Driver分发下来的Command Stream回通过多条路径在GPU上得到执行：如果命令属于编解码的Fix Function则会由MFX执行，部分与视频处理相关的命令会由VQE执行，其他的命令则会由EU执行。</p>
</blockquote>
<p>而编码过程主要分为两部分：ENC与PAK。ENC主要通过硬件实现Rate Control、Motion Estimation、Intra Prediction、Mode Decision等功能；PAK进行Motion Comp、Intra Prediction、Forward Quant、Pixel Reconstruction、Entropy Coding等功能。<br>在目前的英特尔架构中，Media SDK通过API对硬件进行统一的调度与使用，同时我们提供更底层的接口Flexible Encoder Interface（FEI）以实现更优秀的底层调度与更好的处理效果。</p>
<h2 id="2、软件策略"><a href="#2、软件策略" class="headerlink" title="2、软件策略"></a>2、软件策略</h2><p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/images/QSV6.jpg"
                     
                ><br>最底层的FFmpeg可允许开发者将QSV集成进FFmpeg中以便于开发，而Media SDK则主要被用于编解码处理，FFmpeg可把整个多媒体处理有效结合。</p>
<p>如果开发者认为传统的Media SDK的处理质量无法达到要求或码率控制不符合某些特定场景，那么可以通过调用FEI等更底层的接口对控制算法进行优化；最顶层的OpenCL接口则利用GPU功能实现边缘计算等处理任务，常见的Hybrid编码方式便使用了OpenCL。除此之外OpenCL也可实现一些其他的并行处理功能，例如与AI相关的一些计算。</p>
<h3 id="2-1-Media-SDK"><a href="#2-1-Media-SDK" class="headerlink" title="2.1 Media SDK"></a>2.1 Media SDK</h3><p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/images/QSV7.jpg"
                     
                ><br>Media SDK分为以下几个版本：Community Edition是一个包含了基本功能的部分免费版本，Essential Edition与Professional Edition则是具有更多功能的收费版本，可实现例如hybrid HEVC 编码，Audio的编解码、Video Quality Caliper Tool等诸多高级功能和分析工具的集合。</p>
<ol>
<li>软件架构<br><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/images/QSV8.jpg"
                     
                ></li>
</ol>
<ul>
<li>上图主要介绍的是Media Server Studio Software Stack软件架构，我们基于此架构实现FFmpeg的加速。</li>
</ul>
<blockquote>
<p><strong>这里需注意：</strong></p>
</blockquote>
<ul>
<li>OpenGL （mesa）与linux内核一直是开源的项目，但之前版本的MSS中存在一些私有的内核补丁，并对操作系统的或对Linux的内核版本有特殊要求。<blockquote>
</blockquote>
</li>
<li>HD Graphics Driver for Linux之前是一个闭源的方案，而现在的MSDK 和用户态驱动（iHD驱动）都已经实现开源。现在我们正在制作一个基于开源版本的Release，未来大家可以通过此开源平台获得更好的技术支持。</li>
</ul>
<ol start="2">
<li>编解码支持</li>
</ol>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/images/QSV9.jpg"
                     
                ></p>
<p>关于编解码支持，其中我想强调的是HEVC 8 bit 与10 bit的编解码。在Gen 9也就是Skylake上并不支持硬件级别的HEVC 10 bit解码，面对这种情况我们可以通过混合模式实现对HEVC 10 bit的编解码功能。最新E3v6（Kabylake）虽然只有较低性能的GPU配置，但可以支持HEVC 10 bit解码，HEVC 10 bit编码功能则会在以后发布的芯片中提供。</p>
<h3 id="2-2-QSV到FFmpeg的集成思路"><a href="#2-2-QSV到FFmpeg的集成思路" class="headerlink" title="2.2 QSV到FFmpeg的集成思路"></a>2.2 QSV到FFmpeg的集成思路</h3><p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/images/QSV10.jpg"
                     
                ></p>
<p>FFmpeg集成的思路主要如下：</p>
<ol>
<li><p>FFmpeg QSV Plugins：将SDK作为FFmpeg的一部分进行封装，其中包括Decoder、Encoder与VPP Filter处理。</p>
</li>
<li><p>VAPPI Plugin：Media对整个英特尔GPU的软件架构而言，从最底层的linux内核，中间有用户态驱动，对外的统一的接口就是VAAPI。Media SDK的硬件加速就是基于VAAPI开发，同时增加了很多相关的功能，其代码更为复杂；而现在增加的VAAPI Plugin则会直接调用LibAV使软硬件结合更为紧密。</p>
</li>
</ol>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/images/QSV11.jpg"
                     
                ></p>
<p>将SDK集成到FFmpeg中，一共分为AVDecoder、AVEncoder、AVFilter三个部分：</p>
<ol>
<li>AVFilter</li>
</ol>
<p>AVFilter主要是利用硬件的GPU实现Video Processor功能，其中包括<code>vpp_qsv</code>、<code>overlay_qsv</code>、<code>hwupload_qsv</code>，其中我们重点开发了<code>overlay_qsv</code>，<code>vpp_qsv</code>与<code>hwupload_qsv</code>。 如果在一个视频处理的pipeline中有多个VPP的实例运行，会对性能造成很大的影响。我们的方案是实现一个大的VPP Filter中集成所有功能并通过设置参数实现调用，避免了多个VPP的实例存在。</p>
<p>但是为什么将<code>vpp_qsv</code>与<code>overlay_qsv</code>分开？这是因为无法在一个VPP实例中同时完成compositor和一些视频处理功能（像<code>de-interlace</code>等）。英特尔核芯显卡内显存中的存储格式为NV12， 和非硬件加速的模块联合工作时，需要对Frame Buffer进行从系统内存到显卡显存的复制过程，<code>hwupload_qsv</code>提供了在系统内存和显卡内存之间进行快速帧转换的功能。</p>
<ol start="2">
<li>AVEncoder</li>
</ol>
<p>AVEncoder目前支持H264、HEVC、MPEG-2等解码的硬件加速。</p>
<ol start="3">
<li>AVDecoder</li>
</ol>
<p>AVDecoder目前支持H264、HEVC、MPEG-2等协议的硬件加速。</p>
<p>最理想的方案是在整条视频处理的Pipeline中都使用显卡内存从而不存在内存之间的帧拷贝，从而达到最快的处理速度，但在实际应用中我们很多时候是做不到这一点。</p>
<p>将MSDK集成进FFmpeg中时需要解决内存转换的问题，例如VPP Filter不支持一些功能或原始码流并不在Decoder支持的列表中。上图中粉色与绿色的转换表示的就是数据从显存到系统内存再到显存之间的转换。我们在实践中经常会遇到处理性能的急剧变化，可能的原因就是一些非硬件处理的模块和硬件加速的模块存在与同一个pipeline中，从而对整体性能造成影响。这是因为进行了额外的内存拷贝过程，一旦优化不足则会极大影响性能。</p>
<p>具体进行内存分配时我们使用了hwcontext，这是FFmpeg在3.0之后增加的一个功能。我们基于FFmpeg中hwcontext的机制实现了hwcontext_qsv，从而对硬件的初始化与内存分配进行很好的管理。</p>
<h2 id="三、对比MSS与FFmpeg-QSV"><a href="#三、对比MSS与FFmpeg-QSV" class="headerlink" title="三、对比MSS与FFmpeg+QSV"></a>三、对比MSS与FFmpeg+QSV</h2><p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/images/QSV12.jpg"
                     
                ></p>
<blockquote>
<blockquote>
<p>二者支持相同的编解码器与视频处理。</p>
</blockquote>
</blockquote>
<p>二者的差异有：</p>
<ul>
<li><p>MSS 仅提供了一套库和工具，用户必须基于 MSS进行二次开发；而FFmpeg 是一个流行的多媒体开放框架, QSV的GPU加速只是其中的一部分。</p>
</li>
<li><p>MSS的库中提供 了VPP 接口，用户要实现某些功能必须进行二次开发。而目前,FFmpeg+QSV已存在2个开发好的Filter，并且在Filter中集成了MSS 支持的所有功能，并提供更加简单的选项进行配置，这些功能对用户而言都是方便使用的。</p>
</li>
<li><p>在内存管理上，MSS的开发人员必须管理自己的内存；而FFmpeg 提供基本的内存管理单元并实现系统内存的统一调用，集成了硬件级别的内存处理机制。</p>
</li>
<li><p>FFmpeg 提供了一定的容错机制与 a&#x2F;v 同步机制；FFmpeg+QSV 模块充分利用这些机制来提高兼容性，像使用ffmpeg的parse工具进行视频流预处理。</p>
</li>
<li><p>处理流程上，MSS的用户在使用MSS模块之前必须自己开发Mux&#x2F;Demux或其他必要的模块；而FFmpeg+QSV 由于是基于 MSS 实现并添加了特殊的逻辑, 每个模块都可与 FFmpeg 的其他模块一起工作。</p>
</li>
</ul>
<p>可以说FFmpeg有很强大的媒体支持，相对于传统的MSS在保证性能与质量的前提下为用户节省很多工作量并显著提升开发效率。</p>
]]></content>
      <tags>
        <tag>技术</tag>
      </tags>
  </entry>
  <entry>
    <title>更新日志</title>
    <url>/2023/03/23/%E6%9B%B4%E6%96%B0%E6%97%A5%E5%BF%97/</url>
    <content><![CDATA[<h4 id="站点数据更新日志统一记录页"><a href="#站点数据更新日志统一记录页" class="headerlink" title="站点数据更新日志统一记录页"></a>站点数据更新日志统一记录页</h4><span id="more"></span>
<hr>
<h1 id="2024年"><a href="#2024年" class="headerlink" title="2024年"></a>2024年</h1><h2 id="9月5日"><a href="#9月5日" class="headerlink" title="9月5日"></a>9月5日</h2><ul>
<li>优化了一些细节</li>
<li>网站隐私政策更新</li>
</ul>
<h2 id="9月3日"><a href="#9月3日" class="headerlink" title="9月3日"></a>9月3日</h2><ul>
<li>网站使用全新设计语言重建</li>
<li>继续使用阿里云CDN加速服务</li>
</ul>
<h2 id="2月13日"><a href="#2月13日" class="headerlink" title="2月13日"></a>2月13日</h2><ul>
<li>删除了 <strong>大学英语语法总结</strong> 和 <strong>CSGO音乐盒原曲</strong> 两篇文章</li>
<li>网站CDN更换至阿里云服务</li>
<li>站点主体维护</li>
<li>更改了一些细节</li>
</ul>
<h1 id="2023年"><a href="#2023年" class="headerlink" title="2023年"></a>2023年</h1><h2 id="6月9日-更新日志"><a href="#6月9日-更新日志" class="headerlink" title="6月9日 更新日志"></a>6月9日 更新日志</h2><ul>
<li>新增文章 <strong>CSGO音乐盒原曲</strong></li>
<li>加入嵌入式第三方组件</li>
<li>3A415界面切块游戏回归</li>
<li>微调界面文字与布局</li>
</ul>
<h2 id="5月19日-更新日志"><a href="#5月19日-更新日志" class="headerlink" title="5月19日 更新日志"></a>5月19日 更新日志</h2><ul>
<li>网站界面重构</li>
<li>网站接入CDN加速服务</li>
<li>优化网站整体体验</li>
</ul>
<h2 id="5月6日-更新日志"><a href="#5月6日-更新日志" class="headerlink" title="5月6日 更新日志"></a>5月6日 更新日志</h2><ul>
<li>3A415页面临时改为Major 2023倒计时界面 (单击页面中的图片可跳转至主办方官网)</li>
</ul>
<h2 id="5月4日-更新日志"><a href="#5月4日-更新日志" class="headerlink" title="5月4日 更新日志"></a>5月4日 更新日志</h2><ul>
<li>3A415界面更新彩蛋 (界面重写)</li>
<li>优化部分浏览体验</li>
</ul>
<h2 id="5月1日-更新日志"><a href="#5月1日-更新日志" class="headerlink" title="5月1日 更新日志"></a>5月1日 更新日志</h2><ul>
<li>更改部分页面的背景图</li>
<li>在<strong>OBS——推流录制工具</strong>一文中插入若干图片</li>
<li>在全局底栏和文章页正文标题中加入渐变文字效果</li>
</ul>
<h2 id="4月28日-更新日志"><a href="#4月28日-更新日志" class="headerlink" title="4月28日 更新日志"></a>4月28日 更新日志</h2><ul>
<li>新增文章：<strong>OBS-推流录制工具</strong></li>
<li>更新文章：<strong>CSGO控制台指令简明索引</strong></li>
<li>更改了部分文章的banner图片</li>
</ul>
<h2 id="4月27日-更新日志"><a href="#4月27日-更新日志" class="headerlink" title="4月27日 更新日志"></a>4月27日 更新日志</h2><ul>
<li>新增文章：<strong>大学英语语法总结</strong></li>
<li>更改主页图片</li>
<li>优化导航栏模糊效果</li>
</ul>
<h2 id="4月3日-更新日志"><a href="#4月3日-更新日志" class="headerlink" title="4月3日 更新日志"></a>4月3日 更新日志</h2><ul>
<li>新增页面：<strong>3A415</strong></li>
<li>简化顶部导航栏项目</li>
</ul>
<h2 id="4月2日更新日志"><a href="#4月2日更新日志" class="headerlink" title="4月2日更新日志"></a>4月2日更新日志</h2><ul>
<li>站点底部新增外部链接</li>
<li>新增全局中国标准时间校准</li>
<li>新增文章：<strong>更新日志</strong></li>
<li>关于页面新增外部链接和图片</li>
</ul>
<h2 id="3月29日-更新日志"><a href="#3月29日-更新日志" class="headerlink" title="3月29日 更新日志"></a>3月29日 更新日志</h2><ul>
<li>站点底部加入访问统计数据</li>
<li>新增文章：<strong>CSGO控制台指令简明索引</strong></li>
<li>添加文章在首页展示的简略描述信息</li>
<li>新增文章页的数据统计</li>
<li>新增文章页的更新通知</li>
</ul>
<h2 id="3月27日-更新日志"><a href="#3月27日-更新日志" class="headerlink" title="3月27日 更新日志"></a>3月27日 更新日志</h2><ul>
<li>新建 <strong>关于</strong> 页面</li>
<li>更改关于页面中的相关信息</li>
<li>新增站点顶栏毛玻璃模糊效果</li>
</ul>
<h2 id="3月24日-更新日志"><a href="#3月24日-更新日志" class="headerlink" title="3月24日 更新日志"></a>3月24日 更新日志</h2><ul>
<li>更改站点全局主题</li>
<li>更改站点全局字体为系统UI字体</li>
<li>加入文章字数和浏览量统计</li>
<li>加入文章发布时间和作者署名</li>
</ul>
<h2 id="3月23日-更新日志"><a href="#3月23日-更新日志" class="headerlink" title="3月23日 更新日志"></a>3月23日 更新日志</h2><ul>
<li>新建站点ChenHNSY.Gitee.io</li>
<li>更改站点标题为OYAMAMahiro</li>
<li>更改站点的归属权为OYAMAMahiro</li>
<li>更改站点首页文字</li>
<li>调快首页文字的出场速度</li>
</ul>
]]></content>
      <tags>
        <tag>日志</tag>
      </tags>
  </entry>
  <entry>
    <title>OBS_推流录制工具</title>
    <url>/2024/06/16/OBS-%E6%8E%A8%E6%B5%81%E5%BD%95%E5%88%B6%E5%B7%A5%E5%85%B7/</url>
    <content><![CDATA[<h4 id="基于OBS-28-0-的基础面板解释。"><a href="#基于OBS-28-0-的基础面板解释。" class="headerlink" title="基于OBS 28.0 的基础面板解释。"></a>基于OBS 28.0 的基础面板解释。</h4><span id="more"></span>
<h1 id="OBS——推流录制工具"><a href="#OBS——推流录制工具" class="headerlink" title="OBS——推流录制工具"></a>OBS——推流录制工具</h1><p><strong>OBS</strong> (Open Broadcaster Software) 是一款开源、免费、跨平台的直播推流和视频录制工具，它功能强大、可调空间大、上限很高，但是因为它主要为直播而设计，录制操作的便利性较差，上手有一定难度。和一众录屏工具（包括N&#x2F;A卡驱动自带录屏）和它的套皮软件相比，OBS 属于那种 <strong>“愿意花一些时间研究能带来更高画质和效率”</strong> 的工具。</p>
<p>本文将会基于 <code>28.0</code> 版本介绍直播推流和录制相关的设置，并以<strong>CSGO素材录制</strong>为例介绍游戏场景下的设置策略和一些 Trick，注意 OBS 实际分为 Studio 和 Classic 两个版本，Classic 版本有更好的兼容性，对较老的系统和设备有些用处，一般都用 Studio 版本。<br><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/images/OBS0.png"
                     
                ></p>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>官网：<a class="link"   href="https://obsproject.com/" >https://obsproject.com <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<p>项目：<a class="link"   href="https://github.com/obsproject/obs-studio" >https://github.com/obsproject/obs-studio <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<p>论坛：<a class="link"   href="https://obsproject.com/forum" >https://obsproject.com/forum <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<p>资源：<a class="link"   href="https://obsproject.com/forum/resources" >https://obsproject.com/forum/resources <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<blockquote>
<p>资源页包含各种插件、脚本、主题和工具。</p>
</blockquote>
<p>OBS Studio 已经登录 Steam 商店，同样免费。如果担心下载和更新的速度，可以直接从 Steam 下载，相对更加方便。</p>
<h2 id="初识OBS"><a href="#初识OBS" class="headerlink" title="初识OBS"></a>初识OBS</h2><p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/images/OBS1.png"
                     
                ><br>启动 OBS，忽略首次引导，主界面如图所示。可以看到界面分为以下几个部分：</p>
<ul>
<li>顶部菜单栏</li>
<li>预览窗口</li>
<li>快捷工具栏</li>
<li>来源</li>
<li>混音器</li>
<li>场景</li>
<li>转场特效</li>
<li>控件</li>
</ul>
<h3 id="来源面板"><a href="#来源面板" class="headerlink" title="来源面板"></a>来源面板</h3><p>看到 <code>来源</code> 面板，我们需要添加合适的源得到想要的画面，这里的源类似 <code>PhotoShop</code> 里 <code>图层</code> 的概念，上层会覆盖下层，顺序可以随意调整，来源不可用时为透明，不会影响下一层。</p>
<p>可以添加的来源有很多种，首先添加一个 <code>显示器采集</code> 源，一切默认，这样我们就能预览看到画面了。</p>
<p><code>游戏源</code> 和 <code>窗口采集</code> 可以专门捕获全屏游戏或某个游戏&#x2F;窗口，捕获游戏时的性能会更好，可以把它们放在显示器源的上层，兼顾性能和便利，也可以关闭显示器源，不暴露桌面情况只展示特定游戏或窗口。</p>
<p><code>应用程序音频捕获</code> 是当前正在测试的功能，可以获取特定程序的声音，特别适合分离游戏&#x2F;语音音源，方便后期处理，后面会详细介绍。</p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/images/OBS2.png"
                     
                ></p>
<h3 id="混音器面板"><a href="#混音器面板" class="headerlink" title="混音器面板"></a>混音器面板</h3><p>这里我们可以调整各个声音来源的音量和滤镜，改变它们的混合比例。打开某个音源的滤镜页，可以添加 <code>降噪、阈值</code> 等滤镜，包括电脑中已安装的VST效果，图中简单加了一个 <code>噪音抑制</code>，效果尚可。</p>
<p>点“齿轮”按钮或右键打开<strong>高级音频属性</strong>，这里可以进一步调整音量、左右平衡、偏移和监听，和较为重要的<strong>轨道</strong>。轨道中某个数字是否勾选代表它是否在该轨道中出现，一般会在轨道1中保留主要声音&#x2F;直播观众听到的声音，其他轨道分别设置麦克风、开黑语音等音源，方便后期处理。</p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/images/OBS3.png"
                     
                ></p>
<h3 id="场景面板"><a href="#场景面板" class="headerlink" title="场景面板"></a>场景面板</h3><p>设置和调整各个场景（Scene），直播往往需要多个不同场景，如正式开播前的等候场景、游戏A、B、C的场景、聊天场景等等。提前设置好各个场景可以避免来源面板臃肿和不断开关来源的麻烦。搭配相应的工具（如StreamDeck）可以实现快速切换场景，给直播带来便利。</p>
<p>场景之上还有一个场景集合的概念，在顶部菜单栏可以看到，可以更方便的分组、导入导出场景设置。</p>
<h3 id="转场特效面板"><a href="#转场特效面板" class="headerlink" title="转场特效面板"></a>转场特效面板</h3><p>调整场景切换时的转场特效，默认只有渐变和裁切，即交叉溶解和硬切，通过安装转场插件可以添加更多效果。</p>
<h3 id="预览窗口"><a href="#预览窗口" class="headerlink" title="预览窗口"></a>预览窗口</h3><p>除了实时预览效果，在预览窗口还可以全屏投影、截屏和调整源的尺寸及位置。</p>
<h3 id="配置文件"><a href="#配置文件" class="headerlink" title="配置文件"></a>配置文件</h3><p>类似刚才提到的场景集合，每一个<strong>配置文件</strong>对应一组接下来要介绍的设置，整个设置面板的内容都包括在内（录制、推流、快捷键等），注意它和场景互不干扰，要分别设置。</p>
<h2 id="设置"><a href="#设置" class="headerlink" title="设置"></a>设置</h2><p>从控件面板点击按钮打开设置面板，这里按照录制设置的逻辑顺序介绍，以下每一小节对应左侧的标签栏名称。</p>
<h2 id="视频"><a href="#视频" class="headerlink" title="视频"></a>视频</h2><p>在这里可以调整画布和输出的分辨率、缩小方法和录制帧率FPS。</p>
<p>两个分辨率一般保持一致，即<strong>你想要的录制&#x2F;推流分辨率</strong>，并且此时缩小方法不会生效。基础分辨率大于输出分辨率相当于超采，理论上画面细节会更好，性能消耗也会更高。不过这里调整缩放和来源设置的缩放有些重复，除非想要1080P推流同时4K录像，一般不要动，一致即可。</p>
<p><strong>常用 FPS 值</strong> 不超过60，想要录制更高帧率可以改成 <strong>整数 FPS 值</strong>，最高能到120，再往上可以设置<strong>分数 FPS 值</strong>，如 <code>180FPS -&gt; 180/1</code>，不过此时录制的性能一般有瓶颈。</p>
<h2 id="高级"><a href="#高级" class="headerlink" title="高级"></a>高级</h2><p>高级页一般要注意的是 视频、录像、串流延迟这三个部分。</p>
<p><strong>色彩格式</strong>默认的NV12适合推流，设置成其他格式则会有格式转换的性能消耗，但如果机器的性能尚可，建议设置成 <code>I420</code>。如果追求更高的画质，<code>I420</code>下色彩信息损失较多，可以考虑修改为 <code>I444</code>，但它的兼容性较差，<strong>请务必确认你所使用的软件能够正确识别和播放</strong>。</p>
<blockquote>
<p>想要进一步了解可以搜索 <code>色度抽样</code></p>
</blockquote>
<p><strong>色彩范围</strong>设置为有限会丢弃掉一些超黑超白数据。直播场景建议保持 <code>受限</code> 以规避一些问题。在录制场景下可以设置为 <code>完全</code>，<strong>注意此时部分播放器可能会出现异常</strong>。</p>
<p><strong>录像</strong>的<strong>文件名格式</strong>中包含年月日和时间，可以根据需要修改。</p>
<p><strong>自动封装至MP4格式</strong>再录制文件格式为MKV时会自动在录制完成后转换格式，后文中展开说明。</p>
<p><strong>回放缓存文件名前缀&#x2F;后缀</strong> 设置回放缓存（即时重放）功能保存的视频文件名，和录制得到的文件作区分，建议前缀或者后缀改成<code>即时重放</code>。</p>
<p><strong>串流延迟</strong>顾名思义，主要用于游戏直播防窥屏等需求。</p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/images/OBS4.png"
                     
                ></p>
<h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><p>输出页包含推流、录像、音频和回放缓存（即时重放）的设置，也是OBS设置的难点。</p>
<p><strong>输出模式</strong>建议设置成 <code>高级</code> 以获得最大的调整空间，<code>简单模式</code> 下的录像设置不是很够。如果你想要更简单一些，可以先看下去，如果你需要的选项在 <code>简单模式</code> 下就能调整好也可以不动。</p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/images/OBS5.png"
                     
                ></p>
<h4 id="编码器"><a href="#编码器" class="headerlink" title="编码器"></a>编码器</h4><p>编码器是OBS设置的重点。其中 x264 是 CPU 软件编码，比较吃CPU的性能和多核性能，而显卡编码一般对性能影响较小，但是画质较差，NVIDIA显卡有 NVENC，AMD显卡有 AMF，Intel显卡有 QuickSync，Mac下也有对应的编码器。</p>
<p>显卡编码非常适合游戏场景，我们可以把推流和录像都设置成显卡编码或者一个CPU编码、一个显卡编码平衡负载。</p>
<h5 id="x264-编码器"><a href="#x264-编码器" class="headerlink" title="x264 编码器"></a>x264 编码器</h5><p>一般关注这三个设置</p>
<ul>
<li>码率控制：固定码率CBR&#x2F;可变码率VBR&#x2F;CRF<ul>
<li>VBR 更节省码率，但画面变换时码率变换可能滞后导致码率不够，出现明显模糊</li>
<li>CRF 模式适合录像，数值越低画质越高</li>
</ul>
</li>
<li>比特率：CBR&#x2F;VBR下可用<ul>
<li>直播建议在 4000Kbps 以上</li>
<li>8000Kbps 附近比较适合 1080P 直播</li>
<li>码率上限取决于网络的上行带宽，建议测试网速确保带宽足够</li>
</ul>
</li>
<li>CPU使用预设：对CPU占用影响较大，掉帧时提高（使用更快）预设</li>
</ul>
<h5 id="NVIDIA-NVENC-H-264-编码器"><a href="#NVIDIA-NVENC-H-264-编码器" class="headerlink" title="NVIDIA NVENC H.264 编码器"></a>NVIDIA NVENC H.264 编码器</h5><blockquote>
<p>可以尝试使用 <code>NVIDIA NVENC HEVC</code>，但要考虑到直播平台是否支持，和部分设备无法硬解时出现的卡顿情况。</p>
</blockquote>
<ul>
<li>速率控制：同上码率控制</li>
<li>最大比特率：可以在比特率的基础上加 <code>2000~5000 Kbps</code></li>
<li>预设：直播时尽可能在带有<code>性能</code>的三个档位中选择，推荐 <code>性能</code></li>
<li>录像：CQP 模式，数值 <code>12~23</code>；预设改为<code>质量/最高质量</code></li>
</ul>
<h5 id="Apple-ProRes-编码器"><a href="#Apple-ProRes-编码器" class="headerlink" title="Apple ProRes 编码器"></a>Apple ProRes 编码器</h5><p>安装 <a class="link"   href="https://obsproject.com/forum/resources/streamfx-for-obs%C2%AE-studio.578" >StreamFX <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>插件后可用，录像时可以考虑尝试使用，适用于对画质要求高且配置、存储足够的用户，建议<strong>配置</strong>设置 <code>422标准</code> 或 <code>422高品质</code></p>
<blockquote>
<p>更多的编码知识和OBS编码器设置作业参见 <a class="link"   href="https://nazorip.site/archives/63/" >iAvoe的文档 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
</blockquote>
<h4 id="录像"><a href="#录像" class="headerlink" title="录像"></a>录像</h4><p>录像格式：即录像文件的封装格式，OBS 里的编码格式基本都支持 mp4&#x2F;mov&#x2F;mkv 封装，区别是 mkv 封装<strong>遇到断电等意外情况时可以保留之前录好的部分</strong>，<code>菜单栏-文件-录像转封装</code> 处转换为 mp4 格式后即可正常播放，但是部分播放器和软件（如旧版本Pr&#x2F;Ae）支持较差，可能会无法播放。有需要可以前往 <code>高级页</code> 设置自动转换封装。</p>
<p>音轨：如要分离音频方便后期处理，这里务必勾选上所有要用到的音轨。</p>
<p>编码器：如设置成 <strong>（使用推流编码器）</strong>，则会把直播的画面直接保存到本地，但对录像来说画质可能不够好，只求记录时可以这样设置，追求画面则设置成其他编码器。</p>
<p>重新缩放输出：期望的推流和录像分辨率不一致时启用。</p>
<p>自动分割文件：录制时间较长时可以固定文件大小&#x2F;时长分割保存到硬盘中，降低意外情况下的风险，也方便筛选素材。</p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/images/OBS6.png"
                     
                ></p>
<h4 id="音频"><a href="#音频" class="headerlink" title="音频"></a>音频</h4><p>这里可以设置更高的比特率&#x2F;码率&#x2F;位率，提高声音质量，也可以给不同的轨道起名字方便后期区分。</p>
<h4 id="回放缓存"><a href="#回放缓存" class="headerlink" title="回放缓存"></a>回放缓存</h4><p>相当于N卡的即时重放，非常适合保存游戏的高光时刻。</p>
<p>最长回放时间：建议设置 <code>90s</code> 或 <code>120s</code></p>
<blockquote>
<p>强迫症玩家可以 +1s 不然实际时长会小 1s</p>
</blockquote>
<p>最大内存：无法估计时尽可能给高，如 <code>4096MB</code> 或 <code>8192MB</code></p>
<h3 id="推流"><a href="#推流" class="headerlink" title="推流"></a>推流</h3><p>这里设置推流的服务器和秘钥，OBS默认并不支持国内的直播平台，把<strong>服务</strong>修改成 <code>自定义...</code>，从直播平台的开播页找到服务器地址和秘钥并复制到这里，注意不要泄露秘钥。</p>
<h3 id="快捷键"><a href="#快捷键" class="headerlink" title="快捷键"></a>快捷键</h3><p>这里没有什么难点，注意<strong>开始推流&#x2F;停止推流</strong>设置同一个快捷键时，按键为开关式，一开一关。一般建议设置的快捷键：</p>
<ul>
<li>开始推流</li>
<li>停止推流</li>
<li>开始录制</li>
<li>停止录制</li>
<li>开始回放缓存</li>
<li>停止回放缓存</li>
<li>保存回放（<strong>输出</strong>页启用回放缓存后才可见）</li>
</ul>
<h2 id="CSGO素材录制"><a href="#CSGO素材录制" class="headerlink" title="CSGO素材录制"></a>CSGO素材录制</h2><h3 id="画面捕获"><a href="#画面捕获" class="headerlink" title="画面捕获"></a>画面捕获</h3><ul>
<li>想得到<strong>拉伸画面</strong>，对源<strong>右键-变换-拉伸到全屏</strong> 或者选中源 <code>Ctrl+S</code></li>
<li>取消相应游戏源&#x2F;窗口捕获&#x2F;显示器捕获中的 <code>显示鼠标指针</code></li>
<li>受<strong>CSGO受信任模式</strong>的影响，官方匹配&#x2F;直接启动游戏时无法捕获游戏流，只能捕获显示器，性能较差；平台游戏不受影响。</li>
<li>针对本地回放录像 demo 录屏有两种解决方法：<ol>
<li>启动项添加 <code>-allow_third_party_software</code></li>
<li>使用 <a class="link"   href="https://advancedfx.org/" >HLAE <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>启动 CSGO</li>
</ol>
</li>
</ul>
<h3 id="声音捕获"><a href="#声音捕获" class="headerlink" title="声音捕获"></a>声音捕获</h3><ol>
<li>在<strong>来源面板</strong>添加<strong>应用程序音频捕获</strong>，先启动一次游戏并设置好捕获的窗口 <code>csgo.exe</code>。</li>
<li>在<strong>高级音频属性</strong>中调整轨道分配，让游戏的音频单独一轨，<strong>设置-音轨-录像</strong>启用对应轨道。</li>
</ol>
<h3 id="录像设置"><a href="#录像设置" class="headerlink" title="录像设置"></a>录像设置</h3><p>CPU&#x2F;显卡编码根据个人偏好和电脑配置情况选择，以下给出推荐设置：</p>
<h4 id="x264-编码器-1"><a href="#x264-编码器-1" class="headerlink" title="x264 编码器"></a>x264 编码器</h4><ul>
<li>码率控制模式：强烈建议选择 <strong>CRF</strong></li>
<li>CRF 的数值越小，画质越高，文件越大，推荐范围 <code>6~16</code></li>
<li>CRF 数值减 6，码率翻倍</li>
<li>CPU 使用预设 <code>veryfast ~ ultrafast</code> 选一个当前设置下不掉帧的档位，建议 <code>ultrafast</code></li>
</ul>
<h4 id="NVIDIA-NVENC-H-264-HEVC-编码器"><a href="#NVIDIA-NVENC-H-264-HEVC-编码器" class="headerlink" title="NVIDIA NVENC H.264&#x2F;HEVC 编码器"></a>NVIDIA NVENC H.264&#x2F;HEVC 编码器</h4><ul>
<li>编码器：HEVC 比 H.264 效率更高，尤其是高分辨率</li>
<li>速率控制：由于没有 CRF 模式，这里选择 CQP 模式</li>
<li>CQ 级别：<ul>
<li>H.264：推荐 <code>12</code>，不超过 <code>23</code></li>
<li>HEVC：推荐 <code>16</code>，不超过 <code>26</code></li>
</ul>
</li>
<li>预设：选 <code>质量</code> 或 <code>最高质量</code></li>
</ul>
<h4 id="Apple-ProRes-编码器-1"><a href="#Apple-ProRes-编码器-1" class="headerlink" title="Apple ProRes 编码器"></a>Apple ProRes 编码器</h4><p><strong>配置</strong>选择 <code>422 标准（APCN）</code></p>
<h4 id="游戏设置"><a href="#游戏设置" class="headerlink" title="游戏设置"></a>游戏设置</h4><ul>
<li>窗口模式</li>
<li>取消绑定 Ctrl，追踪投掷物从 Alt 改为 R，避免切屏和截图时出现异常</li>
<li>游戏中播放和暂停快捷键可与 OBS 开始&#x2F;结束录制保持一致</li>
<li>控制台指令 <code>engine_no_focus_sleep 0</code> 确保窗口失焦后不掉帧</li>
<li>慢放录像，如 1&#x2F;4：<code>demo_timescale 0.25</code> 或 <code>Shift+F2</code> 在 demoui 中手动操作</li>
<li>限制游戏渲染帧率，如 120fps：<code>fps_max 120</code></li>
</ul>
<h4 id="帧率调整"><a href="#帧率调整" class="headerlink" title="帧率调整"></a>帧率调整</h4><p>录制高帧率素材的时候我们一般会慢放录像+限制FPS节省资源给OBS留出更多的性能空间，在编码设置确定之后调整录制帧率可以明显提高录制的速度，可参照上文设置120FPS甚至更高的帧率。</p>
<p>菜单栏-停靠窗口-统计：启用统计面板，可以看到<strong>由于渲染延迟错过的帧</strong>和<strong>由于编码延迟跳过的帧</strong>和<strong>FPS</strong>。颜色变黄&#x2F;变红或丢帧较多时（偶尔）说明当前设置无法完美录像，需要调整编码器设置或降低录制FPS。</p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/images/OBS8.png"
                     
                ></p>
]]></content>
      <tags>
        <tag>赛博说明书</tag>
      </tags>
  </entry>
  <entry>
    <title>隐私政策</title>
    <url>/2024/09/05/%E9%9A%90%E7%A7%81%E6%94%BF%E7%AD%96/</url>
    <content><![CDATA[<p>更新日期：<strong>2024&#x2F;9&#x2F;5</strong><br>生效日期：<strong>2024&#x2F;9&#x2F;5</strong></p>
<span id="more"></span>

<h2 id="导言"><a href="#导言" class="headerlink" title="导言"></a>导言</h2><p><em>OYAMAMahiro网站</em> 是一款由 <em>L.Y. Chen</em> （以下简称“我们”）提供的产品。您在使用我们的服务时，我们可能会收集和使用您的相关信息。我们希望通过本《隐私政策》向您说明，在使用我们的服务时，我们如何收集、使用、储存和分享这些信息，以及我们为您提供的访问、更新、控制和保护这些信息的方式。本《隐私政策》与您所使用的 <em>OYAMAMahiro网站</em> 服务息息相关，希望您仔细阅读，在需要时，按照本《隐私政策》的指引，作出您认为适当的选择。本《隐私政策》中涉及的相关技术词汇，我们尽量以简明扼要的表述，并提供进一步说明的链接，以便您的理解。</p>
<p><strong>您使用或继续使用我们的服务，即意味着同意我们按照本《隐私政策》收集、使用、储存和分享您的相关信息。</strong></p>
<p>如对本《隐私政策》或相关事宜有任何问题，请通过 <strong><a class="link"   href="mailto:&#x43;&#55;&#x33;&#53;&#x35;&#54;&#48;&#x38;&#64;&#x66;&#x6f;&#120;&#109;&#97;&#105;&#x6c;&#x2e;&#99;&#111;&#109;" >&#x43;&#55;&#x33;&#53;&#x35;&#54;&#48;&#x38;&#64;&#x66;&#x6f;&#120;&#109;&#97;&#105;&#x6c;&#x2e;&#99;&#111;&#109; <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></strong> 与我们联系。</p>
<h2 id="1-我们收集的信息"><a href="#1-我们收集的信息" class="headerlink" title="1. 我们收集的信息"></a>1. 我们收集的信息</h2><p>我们或我们的第三方合作伙伴提供服务时，可能会收集、储存和使用下列与您有关的信息。如果您不提供相关信息，可能无法注册成为我们的用户或无法享受我们提供的某些服务，或者无法达到相关服务拟达到的效果。</p>
<ul>
<li><p><strong>位置信息</strong>，指您开启设备定位功能并使用我们基于位置提供的相关服务时，收集的有关您位置的信息，包括：</p>
<ul>
<li>您通过具有定位功能的移动设备使用我们的服务时，通过GPS或WiFi等方式收集的您的地理位置信息；</li>
<li>您可以通过关闭定位功能，停止对您的地理位置信息的收集。</li>
</ul>
</li>
<li><p><strong>日志信息</strong>，指您使用我们的服务时，系统可能通过cookies、标识符及相关技术收集的信息，包括您的<strong>设备信息</strong>、<strong>浏览信息</strong>、<strong>点击信息</strong>，并将该等信息储存为日志信息，为您提供个性化的用户体验、保障服务安全。您可以通过浏览器设置拒绝或管理cookie、标识符或相关技术的使用。</p>
</li>
</ul>
<p>我们接入的第三方SDK：</p>
<ul>
<li>Google分析服务<ul>
<li><strong>第三方名称</strong>：Google.LLC</li>
<li><strong>使用目的</strong>：网站维护与内容质量升级</li>
<li><strong>收集个人信息类型</strong>：用户IP地址和用户会话动作</li>
<li><strong>处理方式</strong>：匿名化处理</li>
<li><strong>隐私政策链接</strong>：<a class="link"   href="https://policies.google.com/privacy?hl=zh-CN" >Google隐私政策 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
</ul>
</li>
</ul>
<h2 id="2-信息的存储"><a href="#2-信息的存储" class="headerlink" title="2. 信息的存储"></a>2. 信息的存储</h2><p><strong>2.1 信息存储的方式和期限</strong></p>
<ul>
<li>我们会通过安全的方式存储您的信息，包括本地存储（例如利用APP进行数据缓存）、数据库和服务器日志。</li>
<li>一般情况下，我们只会在为实现服务目的所必需的时间内或法律法规规定的条件下存储您的个人信息。</li>
</ul>
<p><strong>2.2 信息存储的地域</strong></p>
<ul>
<li>我们会按照法律法规规定，将境内收集的用户个人信息存储于中国境内。</li>
<li>目前我们不会跨境传输或存储您的个人信息。将来如需跨境传输或存储的，我们会向您告知信息出境的目的、接收方、安全保证措施和安全风险，并征得您的同意。</li>
</ul>
<p><strong>2.3 产品或服务停止运营时的通知</strong></p>
<ul>
<li>当我们的产品或服务发生停止运营的情况时，我们将以推送通知、公告等形式通知您，并在合理期限内删除您的个人信息或进行匿名化处理，法律法规另有规定的除外。</li>
</ul>
<h2 id="3-信息安全"><a href="#3-信息安全" class="headerlink" title="3. 信息安全"></a>3. 信息安全</h2><p>我们使用各种安全技术和程序，以防信息的丢失、不当使用、未经授权阅览或披露。例如，在某些服务中，我们将利用加密技术（例如SSL）来保护您提供的个人信息。但请您理解，由于技术的限制以及可能存在的各种恶意手段，在互联网行业，即便竭尽所能加强安全措施，也不可能始终保证信息百分之百的安全。您需要了解，您接入我们的服务所用的系统和通讯网络，有可能因我们可控范围外的因素而出现问题。</p>
<h2 id="4-我们如何使用信息"><a href="#4-我们如何使用信息" class="headerlink" title="4. 我们如何使用信息"></a>4. 我们如何使用信息</h2><p>我们可能将在向您提供服务的过程之中所收集的信息用作下列用途：</p>
<ul>
<li>向您提供服务；</li>
<li>在我们提供服务时，用于身份验证、客户服务、安全防范、诈骗监测、存档和备份用途，确保我们向您提供的产品和服务的安全性；</li>
<li>帮助我们设计新服务，改善我们现有服务；</li>
<li>使我们更加了解您如何接入和使用我们的服务，从而针对性地回应您的个性化需求，例如语言设定、位置设定、个性化的帮助服务和指示，或对您和其他用户作出其他方面的回应；</li>
<li>向您提供与您更加相关的广告以替代普遍投放的广告；</li>
<li>评估我们服务中的广告和其他促销及推广活动的效果，并加以改善；</li>
<li>软件认证或管理软件升级；</li>
<li>让您参与有关我们产品和服务的调查。</li>
</ul>
<h2 id="5-信息共享"><a href="#5-信息共享" class="headerlink" title="5. 信息共享"></a>5. 信息共享</h2><p>目前，我们不会主动共享或转让您的个人信息至第三方，如存在其他共享或转让您的个人信息或您需要我们将您的个人信息共享或转让至第三方情形时，我们会直接或确认第三方征得您对上述行为的明示同意。</p>
<p>为了投放广告，评估、优化广告投放效果等目的，我们需要向广告主及其代理商等第三方合作伙伴共享您的部分数据，要求其严格遵守我们关于数据隐私保护的措施与要求，包括但不限于根据数据保护协议、承诺书及相关数据处理政策进行处理，避免识别出个人身份，保障隐私安全。</p>
<p>我们不会向合作伙伴分享可用于识别您个人身份的信息（例如您的姓名或电子邮件地址），除非您明确授权。</p>
<p>我们不会对外公开披露所收集的个人信息，如必须公开披露时，我们会向您告知此次公开披露的目的、披露信息的类型及可能涉及的敏感信息，并征得您的明示同意。</p>
<p>随着我们业务的持续发展，我们有可能进行合并、收购、资产转让等交易，我们将告知您相关情形，按照法律法规及不低于本《隐私政策》所要求的标准继续保护或要求新的控制者继续保护您的个人信息。</p>
<p>另外，根据相关法律法规及国家标准，以下情形中，我们可能会共享、转让、公开披露个人信息无需事先征得您的授权同意：</p>
<ul>
<li>与国家安全、国防安全直接相关的；</li>
<li>与公共安全、公共卫生、重大公共利益直接相关的；</li>
<li>犯罪侦查、起诉、审判和判决执行等直接相关的；</li>
<li>出于维护个人信息主体或其他个人的生命、财产等重大合法权益但又很难得到本人同意的；</li>
<li>个人信息主体自行向社会公众公开个人信息的；</li>
<li>从合法公开披露的信息中收集个人信息的，如合法的新闻报道、政府信息公开等渠道。</li>
</ul>
<h2 id="6-您的权利"><a href="#6-您的权利" class="headerlink" title="6. 您的权利"></a>6. 您的权利</h2><p>在您使用我们的服务期间，我们可能会视产品具体情况为您提供相应的操作设置，以便您可以查询、删除、更正或撤回您的相关个人信息，您可参考相应的具体指引进行操作。此外，我们还设置了投诉举报渠道，您的意见将会得到及时的处理。如果您无法通过上述途径和方式行使您的个人信息主体权利，您可以通过本《隐私政策》中提供的联系方式提出您的请求，我们会按照法律法规的规定予以反馈。</p>
<h2 id="7-变更"><a href="#7-变更" class="headerlink" title="7. 变更"></a>7. 变更</h2><p>我们可能适时修订本《隐私政策》的条款。当变更发生时，我们会在版本更新时向您提示新的《隐私政策》，并向您说明生效日期。请您仔细阅读变更后的《隐私政策》内容，<strong>若您继续使用我们的服务，即表示您同意我们按照更新后的《隐私政策》处理您的个人信息。</strong></p>
<h2 id="8-未成年人保护"><a href="#8-未成年人保护" class="headerlink" title="8. 未成年人保护"></a>8. 未成年人保护</h2><p>我们鼓励父母或监护人指导未满十八岁的未成年人使用我们的服务。我们建议未成年人鼓励他们的父母或监护人阅读本《隐私政策》，并建议未成年人在提交的个人信息之前寻求父母或监护人的同意和指导。</p>
]]></content>
      <tags>
        <tag>网站信息公示</tag>
      </tags>
  </entry>
  <entry>
    <title>Windows11系统初步设置与基础调试</title>
    <url>/2024/09/05/Windows11%E7%B3%BB%E7%BB%9F%E5%88%9D%E6%AD%A5%E8%AE%BE%E7%BD%AE%E4%B8%8E%E5%9F%BA%E7%A1%80%E8%B0%83%E8%AF%95/</url>
    <content><![CDATA[<h1 id="引入与准备阶段"><a href="#引入与准备阶段" class="headerlink" title="引入与准备阶段"></a>引入与准备阶段</h1><details class="orange" data-header-exclude><summary><i class="fa-solid fa-chevron-right"></i>购买阶段 </summary>
              <div class='content'>
              <p><strong>购入的渠道决定面临风险的程度，不要为了便宜去趟瑕疵重灾区的浑水。</strong><br><strong>如果购买渠道为“建议”中的选项，可以跳过该部分，前往<a href="https://ly-chen04.github.io/2024/09/05/Windows11%E7%B3%BB%E7%BB%9F%E5%88%9D%E6%AD%A5%E8%AE%BE%E7%BD%AE%E4%B8%8E%E5%9F%BA%E7%A1%80%E8%B0%83%E8%AF%95/#Windows11%E7%B3%BB%E7%BB%9F%E5%88%9D%E6%AD%A5%E8%AE%BE%E7%BD%AE">Windows11系统初步设置</a>。</strong><br><br></p><blockquote><p>建议：京东、天猫官网旗舰店、官方网站商城<br>不建议：所有第三方店铺、拼多多、抖音直播间</p></blockquote><ul><li>建议小白在购买之前和店铺客服确认产品配置与机器封装情况并保存聊天记录后再下单，有助于维护自身权益。</li><li>官方的硬盘或内存定制机型99%是拆封过的，不建议购买，不如自己后期加装硬盘。</li><li>要求卖家使用京东与顺丰快递（大不了就加钱），这两家的时效性很好也可以送货上门，不怎么会出现暴力运输的情况。</li><li>大多笔记本外包装上的封条经过特殊设计，撕下会留有特定印记，封条有问题直接退货。</li><li>不放心的也可以录制一个开箱视频，视频中要展示快递单号与包装全貌。</li></ul>
              </div>
            </details>

<details class="green" data-header-exclude><summary><i class="fa-solid fa-chevron-right"></i>检验阶段 </summary>
              <div class='content'>
              <p><strong>需要着重注意一下几点</strong></p><ul><li>脚垫是否有灰尘或变形</li><li>背盖螺丝是否有松动或拆卸痕迹</li><li>机身及屏幕是否有指纹</li><li>接口处是否有划痕及掉漆</li></ul><p><strong>发现问题及时退货。</strong></p>
              </div>
            </details>

<hr>
<h1 id="Windows11系统初步设置"><a href="#Windows11系统初步设置" class="headerlink" title="Windows11系统初步设置"></a>Windows11系统初步设置</h1><h2 id="激活界面"><a href="#激活界面" class="headerlink" title="激活界面"></a>激活界面</h2>
  <div class="note p-4 mb-4 rounded-small tip">
    <p>电脑默认开启<strong>运输模式</strong>，首次开机需要接通电源。HP和机械革命是没有运输模式的。</p>

  </div>
<p>到达联网界面后不要进行联网操作，联网会自动激活，失去<strong>7天无理由退换货</strong>资格。<br>按下<code>Shift</code>+<code>F10</code>或者<code>Shift</code>+<code>Fn</code>+<code>F10</code>会弹出CMD窗口，输入以下代码回车，系统会自动重启</p>
<blockquote>
<p><code>oobe\BypassNRO.cmd</code></p>
</blockquote>
<p>这时再进入联网界面就会多出现一个 <code>我没有Internet连接</code> 的选项，并在下一个菜单选择 <code>继续执行受限操作</code> 即可跳过。</p>
<p>隐私设置界面根据个人需要可以保留 <code>位置</code> 选项，其余选项都建议关闭。</p>
<h2 id="Windows设置"><a href="#Windows设置" class="headerlink" title="Windows设置"></a>Windows设置</h2><h2 id="系统"><a href="#系统" class="headerlink" title="系统"></a>系统</h2>
  <div class="note p-4 mb-4 rounded-small tip">
    <p>按下 <code>Win</code>+<code>i</code> 可以快速打开Windows设置；<br>因个体审美与需求差异，文本不会介绍Windows的个性化相关设置。</p>

  </div>
<h3 id="电源与电池"><a href="#电源与电池" class="headerlink" title="电源与电池"></a>电源与电池</h3><ul>
<li>电源模式： <strong>高性能</strong> 或 <strong>均衡</strong></li>
<li>节电模式： <strong>关闭</strong></li>
</ul>
<h3 id="存储"><a href="#存储" class="headerlink" title="存储"></a>存储</h3>
  <div class="note p-4 mb-4 rounded-small tip">
    <p>按下 <code>Win</code>+<code>E</code> ，电脑中如果只有一个磁盘则跳过该部分。</p>

  </div>
<ul>
<li>高级存储设置→保存新内容的地方（将里面所有的项目均更改到 <code>C:\</code> 并逐个点击 <code>应用</code> 。）</li>
</ul>
<h3 id="就近共享"><a href="#就近共享" class="headerlink" title="就近共享"></a>就近共享</h3><ul>
<li>就近共享：<strong>关闭</strong></li>
</ul>
<h3 id="开发者选项"><a href="#开发者选项" class="headerlink" title="开发者选项"></a>开发者选项</h3><ul>
<li>开发人员模式：<strong>关闭</strong></li>
</ul>
<h3 id="剪贴板"><a href="#剪贴板" class="headerlink" title="剪贴板"></a>剪贴板</h3><ul>
<li>剪贴板历史记录：<strong>开启</strong></li>
<li>跨设备的剪贴板历史记录：<strong>按需关闭</strong></li>
</ul>
<h2 id="游戏"><a href="#游戏" class="headerlink" title="游戏"></a>游戏</h2><h3 id="GameBar"><a href="#GameBar" class="headerlink" title="GameBar"></a>GameBar</h3><ul>
<li>允许控制器打开GameBar：<strong>按需关闭</strong></li>
</ul>
<h3 id="摄像"><a href="#摄像" class="headerlink" title="摄像"></a>摄像</h3><ul>
<li>录制游戏过程：<strong>关闭</strong></li>
</ul>
<h3 id="游戏模式"><a href="#游戏模式" class="headerlink" title="游戏模式"></a>游戏模式</h3><ul>
<li>游戏模式：<strong>开启</strong></li>
</ul>
<h2 id="辅助功能"><a href="#辅助功能" class="headerlink" title="辅助功能"></a>辅助功能</h2><h3 id="键盘"><a href="#键盘" class="headerlink" title="键盘"></a>键盘</h3><ul>
<li>仅开启 <strong>使用“打印屏幕”键打开屏幕捕获</strong></li>
</ul>
<h2 id="隐私和安全性"><a href="#隐私和安全性" class="headerlink" title="隐私和安全性"></a>隐私和安全性</h2><h3 id="常规"><a href="#常规" class="headerlink" title="常规"></a>常规</h3><ul>
<li><strong>关闭所有选项</strong></li>
</ul>
<h3 id="语音"><a href="#语音" class="headerlink" title="语音"></a>语音</h3><ul>
<li>在线语音识别：<strong>按需关闭</strong></li>
</ul>
<h3 id="诊断和反馈"><a href="#诊断和反馈" class="headerlink" title="诊断和反馈"></a>诊断和反馈</h3><ul>
<li><strong>关闭所有选项</strong></li>
<li>反馈频率：<strong>从不</strong></li>
</ul>
<h3 id="活动历史记录"><a href="#活动历史记录" class="headerlink" title="活动历史记录"></a>活动历史记录</h3><ul>
<li>在此设备上存储我的活动历史记录：<strong>关闭</strong></li>
</ul>
<h3 id="搜索权限"><a href="#搜索权限" class="headerlink" title="搜索权限"></a>搜索权限</h3><ul>
<li>安全搜索：<strong>关闭</strong></li>
<li>显示搜索焦点：<strong>关闭</strong></li>
</ul>
<h3 id="搜索Windows"><a href="#搜索Windows" class="headerlink" title="搜索Windows"></a>搜索Windows</h3><ul>
<li>查找我的文件：<strong>增强</strong></li>
</ul>
<h2 id="Windows更新"><a href="#Windows更新" class="headerlink" title="Windows更新"></a>Windows更新</h2>
  <div class="note p-4 mb-4 rounded-small tip">
    <p>Windows的周期小更新以及补丁更新修复问题与带来新功能的同时可能出现新的bug，如果不介意此问题就跳过此部分。</p>

  </div>
<ul>
<li>暂停更新：<strong>暂停5周</strong><br></li>
</ul>
<hr>
<h2 id="安装显卡驱动程序"><a href="#安装显卡驱动程序" class="headerlink" title="安装显卡驱动程序"></a>安装显卡驱动程序</h2>
  <div class="note p-4 mb-4 rounded-small tip">
    <p>部分厂商会在出厂时为设备安装较新的显卡驱动程序，如果不确定或不放心也可以跟随以下指引。</p>

  </div>
<h3 id="Nvidia英伟达®显卡"><a href="#Nvidia英伟达®显卡" class="headerlink" title="Nvidia英伟达®显卡"></a>Nvidia英伟达®显卡</h3><ul>
<li>Nvidia APP可以更方便地定期更新显卡驱动：<a class="link"   href="https://www.nvidia.cn/software/nvidia-app/" >点击跳转 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
<li>仅下载驱动程序本体（手动驱动搜索）：<a class="link"   href="https://www.nvidia.cn/drivers/lookup/" >点击跳转 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
</ul>
<h3 id="AMD®显卡"><a href="#AMD®显卡" class="headerlink" title="AMD®显卡"></a>AMD®显卡</h3><ul>
<li>统一安装与调试软件：<a class="link"   href="https://www.amd.com/zh-cn/support/download/drivers.html" >点击跳转 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
</ul>
<hr>
<blockquote>
<ul>
<li>安装完成后，重启电脑。</li>
<li>每个品牌的设备都会预装独立的性能控制软件，搭载独立显卡的机型需在软件内打开<strong>独显直连</strong>开关，在此就不过多赘述。</li>
</ul>
</blockquote>
<hr>
<h1 id="性能调优"><a href="#性能调优" class="headerlink" title="性能调优"></a>性能调优</h1>
  <div class="note p-4 mb-4 rounded-small tip">
    <p>此部分是为了使电脑在游戏时获得更好的性能释放而进行的操作。</p>

  </div>
<h2 id="Nvidia控制面板设置"><a href="#Nvidia控制面板设置" class="headerlink" title="Nvidia控制面板设置"></a>Nvidia控制面板设置</h2><h3 id="通过预览调整图像设置"><a href="#通过预览调整图像设置" class="headerlink" title="通过预览调整图像设置"></a>通过预览调整图像设置</h3><ul>
<li>预览：<strong>使用“高级3D图像”设置</strong></li>
</ul>
<h3 id="管理3D设置"><a href="#管理3D设置" class="headerlink" title="管理3D设置"></a>管理3D设置</h3><blockquote>
<ul>
<li>此处可以点击 <strong>程序设置</strong> 将想要更改的游戏程序添加进来，这样更改的设置只会影响所选程序。</li>
<li>在此页面上下浏览列表时建议使用右侧滑块控制。</li>
<li>单个页面更改完成后记得点击右下角 <strong>应用</strong>。</li>
</ul>
</blockquote>
<ul>
<li>图形增强：<strong>关</strong></li>
<li>CUDA-GPUs：<strong>全部</strong></li>
<li>CUDA-系统内存回退政策：<strong>驱动器默认值</strong>（或者按需选择 <strong>偏好无系统内存回退</strong>）</li>
<li>DSR-因数：<strong>OFF</strong></li>
<li>DSR-平滑度：<strong>关</strong></li>
<li>OpenGL GDI 兼容性：<strong>自动</strong></li>
<li>OpenGL 渲染GPU：<strong>自动选择</strong></li>
<li>Vulkan&#x2F;OpenGL 现行方法：<strong>自动</strong></li>
<li>三重缓冲：<strong>关</strong></li>
<li>低延时模式：<strong>（按需选择）</strong>，游戏内设置需要与此选项一致。</li>
<li>各向异性过滤：<strong>应用程序控制的</strong></li>
<li>后台应用程序最大帧速率：<strong>关</strong></li>
<li>垂直同步：<strong>使用3D应用程序设置</strong></li>
<li>多帧采样 AA (MFAA)：<strong>关</strong></li>
<li>平滑处理-FXAA：<strong>关</strong></li>
<li>平滑处理-模式：<strong>应用程序控制的</strong></li>
<li>平滑处理-灰度纠正：<strong>开</strong></li>
<li>平滑处理-设置：<strong>应用程序控制的</strong></li>
<li>平滑处理-透明度：<strong>关</strong></li>
<li>最大帧速率：<strong>关</strong></li>
<li>环境光吸收：<strong>关</strong></li>
<li>电源管理模式：<strong>最高性能优先</strong></li>
<li>着色器缓存大小：<strong>驱动程序默认值</strong></li>
<li>纹理过滤-三线性优化：<strong>开</strong></li>
<li>纹理过滤-各向异性采样优化：<strong>开</strong></li>
<li>纹理过滤-负LOD偏移：<strong>允许</strong></li>
<li>纹理过滤-质量：<strong>高性能</strong></li>
<li>线程优化：<strong>（建议关闭）</strong></li>
<li>虚拟现实-可变速率超级取样：<strong>关</strong></li>
<li>虚拟现实预渲染帧数：<strong>1</strong></li>
<li>首选刷新率：<strong>最高可用</strong></li>
</ul>
<h3 id="配置Surround、PhysX"><a href="#配置Surround、PhysX" class="headerlink" title="配置Surround、PhysX"></a>配置Surround、PhysX</h3><ul>
<li>PhysX设置→处理器：<strong>（选择以Nvidia开头的选项）</strong></li>
</ul>
<h3 id="更改分辨率"><a href="#更改分辨率" class="headerlink" title="更改分辨率"></a>更改分辨率</h3><ul>
<li>应用以下分辨率→刷新率：<strong>（选择最大的数值）</strong></li>
<li>应用以下设置：<strong>使用NVIDIA颜色设置</strong></li>
<li>桌面颜色深度：<strong>（选择最大数值）</strong></li>
<li>输出颜色深度：<strong>（选择最大数值）</strong></li>
<li>输出颜色格式：<strong>（按需选择或者RGB）</strong></li>
<li>输出动态范围：<strong>完全</strong></li>
</ul>
<h3 id="调整桌面尺寸与位置"><a href="#调整桌面尺寸与位置" class="headerlink" title="调整桌面尺寸与位置"></a>调整桌面尺寸与位置</h3><ul>
<li>缩放→选择缩放模式：<strong>（按需设置或者全屏）</strong></li>
<li>对以下项目执行缩放：<strong>GPU</strong></li>
<li>覆盖由游戏和程序设置的缩放模式：<strong>✓</strong></li>
</ul>
<h3 id="调整视频颜色设置"><a href="#调整视频颜色设置" class="headerlink" title="调整视频颜色设置"></a>调整视频颜色设置</h3><ul>
<li>您如何进行颜色调整：<strong>通过NVIDIA设置</strong></li>
<li>高级→动态范围：<strong>完全</strong></li>
</ul>
<h3 id="调整视频图像设置"><a href="#调整视频图像设置" class="headerlink" title="调整视频图像设置"></a>调整视频图像设置</h3><ul>
<li>RTX视频增强：<strong>按需开启</strong>，质量：<strong>自动</strong><br></li>
</ul>
<h2 id="AMD显卡设置"><a href="#AMD显卡设置" class="headerlink" title="AMD显卡设置"></a>AMD显卡设置</h2><blockquote>
<p>敬请期待。</p>
</blockquote>
]]></content>
      <tags>
        <tag>技术</tag>
      </tags>
  </entry>
</search>
